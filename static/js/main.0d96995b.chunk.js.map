{"version":3,"sources":["components/OnOff/OnOff.tsx","components/UncontrolledRating/UncontrolledRating.tsx","components/Accordion/Accordion.tsx","components/Rating/Rating.tsx","components/UncontrolledOnOff/UncontrolledOnOff.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["OnOff","props","console","log","OnStyle","width","height","border","display","padding","marginRight","backgroundColor","on","OffStyle","IndicatorStyle","borderRadius","style","onClick","setOn","UncontrolledRating","useState","value","setValue","Star","selected","AccordionTitle","collapsed","title","AccordionBody","Accordion","Rating","UncontrolledOnOff","onChange","App","ratingValue","setRatingValue","accordionValue","setAccordionValue","className","toString","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0d96995b.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\n\r\ntype OnOffPropsType = {\r\n    on: boolean\r\n    setOn: (value:boolean)=> void\r\n}\r\n\r\nfunction OnOff(props:OnOffPropsType) {\r\n    console.log(\"OnOffRendering\")\r\n\r\n    const OnStyle={\r\n        width:\"30px\",\r\n        height:\"20px\",\r\n        border:\"1px solid black\",\r\n        display:\"inline-block\",\r\n        padding:\"2px\",\r\n        marginRight:\"5px\",\r\n        backgroundColor: props.on ? \"green\" : \"white\"\r\n    }\r\n    const OffStyle={\r\n        width:\"30px\",\r\n        height:\"20px\",\r\n        border:\"1px solid black\",\r\n        display:\"inline-block\",\r\n        padding:\"2px\",\r\n        marginRight:\"5px\",\r\n        backgroundColor: props.on ? \"white\" : \"red\"\r\n\r\n\r\n    }\r\n    const IndicatorStyle={\r\n        width:\"10px\",\r\n        height:\"10px\",\r\n        borderRadius:\"5px\",\r\n        border:\"1px solid black\",\r\n        display:\"inline-block\",\r\n        backgroundColor: props.on ? \"green\" : \"red\"\r\n    }\r\n\r\n\r\nreturn(\r\n    <div>\r\n        <div style={OnStyle} onClick={()=>{\r\n            props.setOn(true)}}>On</div>\r\n        <div style={OffStyle} onClick={()=>{\r\n            props.setOn(false)}}>Off</div>\r\n        <div style={IndicatorStyle} onClick={()=>{}}></div>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default OnOff;","import React, {useState} from \"react\";\r\nimport {isBoolean} from \"util\";\r\n\r\ntype RatingPropsType ={\r\n    //value: 0|1|2|3|4|5\r\n}\r\n\r\nexport function UncontrolledRating(props:RatingPropsType) {\r\n    console.log(\"Rating rendering\")\r\nlet[value, setValue] = useState<number>(0);\r\n\r\n    // delete buttons and make clicks on stars\r\n\r\n    return (\r\n        <div>\r\n            <Star selected={value>0} setValue={()=>{setValue(1)}}/>\r\n            <Star selected={value>1} setValue={()=>{setValue(2)}}/>\r\n            <Star selected={value>2} setValue={()=>{setValue(3)}}/>\r\n            <Star selected={value>3} setValue={()=>{setValue(4)}}/>\r\n            <Star selected={value>4} setValue={()=>{setValue(5)}}/>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype StarPropsType ={\r\n    selected: boolean\r\n    setValue: ()=> void\r\n}\r\n\r\nfunction Star(props: StarPropsType) {\r\n    console.log(\"Star rendering\")\r\n\r\n    return (\r\n        <span onClick={()=>{props.setValue()}}>{props.selected ? <b>star </b> : \"star \" }</span>\r\n    )\r\n}","import React from \"react\";\r\n\r\ntype AccordionPropsType = {\r\n    title:string\r\n    collapsed: boolean\r\n    onClick: (value:boolean)=> void\r\n}\r\n\r\nfunction Accordion(props:AccordionPropsType) {\r\n    console.log(\"Accordion rendering\")\r\n\r\n        return (\r\n            <div>\r\n                <AccordionTitle\r\n                    onClick={props.onClick}\r\n                    title={props.title}\r\n                    collapsed={props.collapsed}\r\n                />\r\n                {!props.collapsed && <AccordionBody />}\r\n            </div>\r\n        )\r\n}\r\n\r\ntype AccordionTitlePropsType = {\r\n    title: string\r\n    collapsed: boolean\r\n    onClick: (value:boolean)=> void\r\n}\r\n\r\nfunction AccordionTitle(props:AccordionTitlePropsType) {\r\n    console.log(\"AccordionTitle rendering\")\r\n    return(\r\n        <h3 onClick={()=>{props.onClick(!props.collapsed)}}>{props.title}</h3>\r\n    )\r\n}\r\nfunction AccordionBody() {\r\n    console.log(\"AccordionBody rendering\")\r\n    return(\r\n        <ul>\r\n            <li>1</li>\r\n            <li>2</li>\r\n            <li>3</li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Accordion;","import React from \"react\";\r\nimport {isBoolean} from \"util\";\r\n\r\nexport type RatingValueType = 0|1|2|3|4|5\r\n\r\ntype RatingPropsType ={\r\n    value: 0|1|2|3|4|5\r\n    onClick: (value: RatingValueType)=> void\r\n}\r\n\r\nexport function Rating(props:RatingPropsType) {\r\n    console.log(\"Rating rendering\")\r\n\r\n    return (\r\n        <div>\r\n            <Star selected={props.value>0} onClick={props.onClick} value={1}/>\r\n            <Star selected={props.value>1} onClick={props.onClick} value={2}/>\r\n            <Star selected={props.value>2} onClick={props.onClick} value={3}/>\r\n            <Star selected={props.value>3} onClick={props.onClick} value={4}/>\r\n            <Star selected={props.value>4} onClick={props.onClick} value={5}/>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype StarPropsType ={\r\n    selected: boolean\r\n    value: RatingValueType\r\n    onClick: (value: RatingValueType)=> void\r\n}\r\n\r\nfunction Star(props: StarPropsType) {\r\n    console.log(\"Star rendering\")\r\n    return (\r\n        <span onClick={()=>{props.onClick(props.value)}}>{props.selected ? <b>star </b> : \"star \"}</span>\r\n    )\r\n}","import React, {useState} from \"react\";\r\n\r\ntype OnOffPropsType = {\r\n    onChange : (on:boolean)=> void\r\n}\r\n\r\nfunction UncontrolledOnOff(props:OnOffPropsType) {\r\n    console.log(\"OnOffRendering\")\r\n\r\n    let[on, setOn] = useState(false);\r\n\r\n    console.log(\"On: \" + on)\r\n\r\n    const OnStyle={\r\n        width:\"30px\",\r\n        height:\"20px\",\r\n        border:\"1px solid black\",\r\n        display:\"inline-block\",\r\n        padding:\"2px\",\r\n        marginRight:\"5px\",\r\n        backgroundColor: on ? \"green\" : \"white\"\r\n    }\r\n    const OffStyle={\r\n        width:\"30px\",\r\n        height:\"20px\",\r\n        border:\"1px solid black\",\r\n        display:\"inline-block\",\r\n        padding:\"2px\",\r\n        marginRight:\"5px\",\r\n        backgroundColor: on ? \"white\" : \"red\"\r\n\r\n\r\n    }\r\n    const IndicatorStyle={\r\n        width:\"10px\",\r\n        height:\"10px\",\r\n        borderRadius:\"5px\",\r\n        border:\"1px solid black\",\r\n        display:\"inline-block\",\r\n        backgroundColor: on ? \"green\" : \"red\"\r\n    }\r\n\r\nconst onClicked=()=>{\r\n    props.onChange(true)\r\n    setOn(true)}\r\nconst offClicked =()=>{\r\n    props.onChange(false)\r\n    setOn(false)}\r\n\r\nreturn(\r\n    <div>\r\n        <div style={OnStyle} onClick={onClicked}>On</div>\r\n        <div style={OffStyle} onClick={offClicked}>Off</div>\r\n        <div style={IndicatorStyle}></div>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default UncontrolledOnOff;","import React, {useState} from 'react';\nimport './App.css';\nimport OnOff from \"./components/OnOff/OnOff\";\nimport UncontrolledAccordion from \"./components/UncontrolledAccordion/UncontrolledAccordion\";\nimport {UncontrolledRating} from \"./components/UncontrolledRating/UncontrolledRating\";\nimport Accordion from \"./components/Accordion/Accordion\";\nimport {Rating, RatingValueType} from \"./components/Rating/Rating\";\nimport UncontrolledOnOff from \"./components/UncontrolledOnOff/UncontrolledOnOff\";\n\nfunction sum(a: number, b: number) {\n    alert(a + b)\n}\n\n/*sum(23,12);\nsum(100,300)*/\n\n//ето function declaration -спосіб створення функції\nfunction App() {\n    console.log(\"App rendering\")\n    //здесь функция может делать штото полезное\n    // в конце функция обязана вернуть JSX\n\n    let [ratingValue, setRatingValue] = useState<RatingValueType>(3);\n    let[accordionValue, setAccordionValue] = useState(false);\n    let[on, setOn] = useState<boolean>(false);\n\n    return (\n        <div className=\"App\">\n            <div>\n\n                <Accordion title={\"Controlled accordion\"}\n                           collapsed={accordionValue}\n                           onClick={setAccordionValue}/>\n                <UncontrolledRating/>\n                <Rating value={ratingValue} onClick={setRatingValue}/>\n\n                <hr />\n\n                <OnOff on={on} setOn={setOn}/>\n\n                <UncontrolledOnOff onChange={setOn}/> {on.toString()}\n\n                {/*\n                <Rating value={0} />\n                <Rating value={1} />\n                <Rating value={2} />\n                <Rating value={3} />\n                <Rating value={4} />\n                <Rating value={5} />*/}\n\n\n            </div>\n        </div>\n    );\n}\n\ntype PageTitlePropsType = {\n    title: string\n}\n\nfunction PageTitle(props: PageTitlePropsType) {\n    console.log(\"App Title rendering\")\n    return (\n        <h1>{props.title}</h1>\n    )\n}\n\n//function expression\nconst App2 = function () {\n    return (\n        <div className=\"App\">\n            <div>This is App component</div>\n        </div>\n    );\n}\n\n//стрелочная функция\nconst App3 = () => {\n    return (\n        <div className=\"App\">\n            <div>This is App component</div>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(  <App />,  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}